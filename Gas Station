/*************************************
 There are N gas stations along a circular route, where the amount of gas at station i is gas[i].

You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.

Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.

Note:
The solution is guaranteed to be unique. 
**************************************/

class Solution {
public:
    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {
        int total = 0;
        int sumRemaining = 0;
        int remain = 0;
        int start;
        for(int i=0;i<gas.size();i++)
        {
            remain = gas[i]-cost[i];//how much remaining for each gas station 
            if(sumRemaining>=0) // if accumulated gas is less than, it should be reset.
            {
                sumRemaining = sumRemaining+remain;
            }
            else //reset.
            {
                sumRemaining = remain;
                start = i;
            }
            total+=remain;
        }
        
        if(total>=0) return start;
        else return -1;
    }
};


