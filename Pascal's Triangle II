/************************************************************
Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space? 
***************************************************************/


class Solution {
public:
    vector<int> getRow(int rowIndex) {
        vector<int> result;
       int i = 0;
       while(i++<=rowIndex)
       {
              if(result.size()==0)
                result.push_back(1); // assign value should use {}
              else
              {
                 
                  result.insert(result.begin(), 1);
                  int K = result.size();
                  for(int j = 1; j < K-1;j++)
                  {
                      result[j] = result[j]+result[j+1];
                  }
              }
       }
       return result;
    }
};
