/********************************************************************************************/
Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

Note:
You may assume that nums1 has enough space (size that is greater or equal to m + n) to hold additional elements from nums2.
The number of elements initialized in nums1 and nums2 are m and n respectively.
/*****************************************************************************************/
class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {

        int end = m + n - 1;
        m = m - 1;
        n = n - 1;

        while(n >=0)
        {
            if (m < 0 || nums2.at(n) > nums1.at(m))
                nums1.at(end--) = nums2.at(n--);
            else
                nums1.at(end--) = nums1.at(m--);
        }
    }
};



class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int i = m-1;
        int j = n-1;
        int k = m+n-1;
        while(i>=0 || j>=0)
        {
            if(j<0&&i>=0) 
                {nums1[k] = nums1[i];i--;}
            else if(j>=0 && i<0)
                {nums1[k] = nums2[j];j--; }
            else
            {
                if(nums1[i]>=nums2[j]) 
                    {nums1[k] = nums1[i];i--;}
                else  
                    {nums1[k] = nums2[j];j--; }
            }
            k--;
        }
    }
};
