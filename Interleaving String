class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        int m = s1.size();
        int n = s2.size();
        int k = s3.size();
        
        if(k!=m+n) return false;
        vector<vector<bool>> dp(m+1,vector<bool>(n+1));
        dp[0][0] = true;
        
        //first row
        for(int j = 1;j<=n;j++)
           if(s3[j-1] == s2[j-1])
                dp[0][j] = true;
           else
                dp[0][j] = false;
                 
        
        //first column
        for(int i = 1;i<=m;i++)
           if(s3[i-1] == s1[i-1])
                 dp[i][0] = dp[i-1][0];
           else
                dp[i][0] = false;
            
              
        for(int i = 1;i<=m;i++)
         for(int j = 1;j<=n;j++)
         {
             if(s3[i+j-1] == s1[i-1] && s3[i+j-1] != s2[j-1]) 
                dp[i][j] = dp[i-1][j];
             if(s3[i+j-1] == s2[j-1] && s3[i+j-1] != s1[i-1] ) 
                dp[i][j] = dp[i][j-1];
             if(s3[i+j-1] == s2[j-1] && s3[i+j-1] == s1[i-1] )  
                dp[i][j] = dp[i][j-1] || dp[i-1][j];
            if(s3[i+j-1] != s2[j-1] && s3[i+j-1] != s1[i-1] )
                dp[i][j] = false;
         }
         
         
         return dp[m][n];
    }
};
