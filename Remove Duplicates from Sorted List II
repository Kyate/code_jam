/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode dummy(0);
        ListNode *pre = &dummy;
        pre->next = head;
        
        ListNode *curr = head;
        if(curr == NULL) return NULL;
        ListNode *next = curr->next;
        if(next == NULL) return head;
        
        while(curr && next)
        {
            if(curr->val == next->val)
            {
                while(next && curr->val == next->val )
                {
                    delete curr;
                    curr = next;
                    next = curr->next;
                }
                pre->next = next;
                curr = next;
                if(curr) //be careful here. otherwise runtime error
                   next = curr->next;
            }
            else
            {
               pre = curr;
               curr = next;
               next = next->next;
            }
        }
        return dummy.next;
        
    }
};
